<project name="Neuron Robotics Java Serial" default="deploy" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<!--<property file="../NRSDK/src/com/neuronrobotics/sdk/config/build.properties"/>-->

  <property name="app.name"      value="nr-java-serial"/>
  <property name="app.version"      value="3.9.2"/>
  <property name="app.path"      value="/${app.name}"/>
  <property name="build.home"    value="${basedir}/build"/>
  <property name="lib.home"      value="${basedir}/src/main/c/resources"/>
  <property name="dist.home"     value="${basedir}/target"/>
  <property name="docs.home"     value="${basedir}/docs"/>
  <property name="src.home"      value="${basedir}/src/main/java"/>
	
	
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
	
  <property name="jar.module" value="${app.name}-${app.version}.jar"/>

<!-- maven stuff -->
<property name="groupId" value="com.neuronrobotics" />
<property name="artifactId" value="nrjavaserial" />
<property name="version" value="3.9.2" />

<property name="maven-jar" value="${dist.home}/maven/${artifactId}-${version}.jar" />
<property name="maven-javadoc-jar" value="${dist.home}/maven/${artifactId}-${version}-javadoc.jar" />
<property name="maven-sources-jar" value="${dist.home}/maven/${artifactId}-${version}-sources.jar" />

<property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
<property name="maven-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots/" />
<property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
<property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

  <target name="clean"
   description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

  <target name="prepare" description="Create the file structure for assembly">
    <mkdir  dir="${build.home}"/>
  	
    <mkdir  dir="${build.home}/lib"/>
  	
    <copy  todir="${build.home}/lib">
    	<fileset dir="${lib.home}" includes="**/*"/>
    </copy>
  </target>

  <path id="compile.classpath">
    <fileset dir="${lib.home}">
      <include name="*.jar"/>
    </fileset>  	
  </path>
	
  <target name="compile" depends="prepare"
   description="Compile Java sources">
    <mkdir    dir="${build.home}"/>
    <javac srcdir="${src.home}"
			destdir="${build.home}"
			debug="${compile.debug}"
			deprecation="${compile.deprecation}"
			optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
    </javac>
  	
    <copy  todir="${build.home}">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="dist"
   description="Create binary distribution">
  	<mkdir dir="${dist.home}/docs/api"/>
  	
    <jar jarfile="${dist.home}/nrjavaserial-${app.version}.jar">
      <manifest>
        <attribute name="Sealed" value="false"/>
      </manifest>
      <fileset dir="build">
        <include name="**/*.class"/>
      	<include name="**/*.png"/>
        <exclude name="test/*.class"/>
      </fileset>
      <fileset dir="${build.home}/lib" includes="**/*" />
    </jar>
  	
  </target>	

  <target name="maven-dist" depends="compile" description="generate the distribution">

    <!-- build the main artifact -->
    <jar jarfile="${maven-jar}" >
       <manifest>
        <attribute name="Sealed" value="false"/>
      </manifest>
      <fileset dir="build">
        <include name="**/*.class"/>
        <include name="**/*.png"/>
        <exclude name="test/*.class"/>
      </fileset>
      <fileset dir="${build.home}/lib" includes="**/*" />
    </jar>

    <!-- build the javadoc artifact -->
    <javadoc sourcepath="${src.home}" destdir="${dist.home}/javadoc" />
    <jar jarfile="${maven-javadoc-jar}">
      <fileset dir="${dist.home}/javadoc" />
    </jar>

    <!-- build the sources artifact -->
    <jar jarfile="${maven-sources-jar}">
      <fileset dir="${src.home}" />
    </jar>
  </target>
	
  <target name="javadoc" depends="compile"
   description="Create Javadoc API documentation">
    
    <javadoc sourcepath="${src.home}" destdir="${dist.home}/docs/api" packagenames="*" 
    	source="1.6" splitindex="true" use="true" version="true">
      <classpath refid="compile.classpath"/> 
      <bottom><![CDATA[<script type="text/javascript" src="/googleanalytics.js"></script>]]></bottom>
   	</javadoc>
  </target>

  <target name="deploy" depends="clean, prepare, compile, dist, javadoc"
   description="Builds the full deployment" />

  <target name="stage" depends="maven-dist" description="deploy release version to Maven staging repository">
  <!-- sign and deploy the main artifact -->
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${maven-staging-repository-url}" />
      <arg value="-DrepositoryId=${maven-staging-repository-id}" />
      <arg value="-DpomFile=pom.xml" />
      <arg value="-Dfile=${maven-jar}" />
      <arg value="-Pgpg" />
    </artifact:mvn>

    <!-- sign and deploy the sources artifact -->
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${maven-staging-repository-url}" />
      <arg value="-DrepositoryId=${maven-staging-repository-id}" />
      <arg value="-DpomFile=pom.xml" />
      <arg value="-Dfile=${maven-sources-jar}" />
      <arg value="-Dclassifier=sources" />
      <arg value="-Pgpg" />
    </artifact:mvn>

    <!-- sign and deploy the javadoc artifact -->
    <artifact:mvn>
      <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
      <arg value="-Durl=${maven-staging-repository-url}" />
      <arg value="-DrepositoryId=${maven-staging-repository-id}" />
      <arg value="-DpomFile=pom.xml" />
      <arg value="-Dfile=${maven-javadoc-jar}" />
      <arg value="-Dclassifier=javadoc" />
      <arg value="-Pgpg" />
    </artifact:mvn>
  </target>
</project>
